/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * JSONPlaceholder API
 * OpenAPI spec version: 1.0.0
 */
import {
  HttpClient
} from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse
} from '@angular/common/http';

import {
  Injectable,
  inject
} from '@angular/core';

import {
  Observable
} from 'rxjs';

export interface Todo {
  id?: number;
  userId?: number;
  title?: string;
  completed?: boolean;
}

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
        | HttpParams
        | Record<string, string | number | boolean | ReadonlyArray<string | number | boolean>>;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: {includeHeaders?: string[]} | boolean;
  timeout?: number;
}



@Injectable({ providedIn: 'root' })
export class JSONPlaceholderAPIService {
  private readonly http = inject(HttpClient);
 getTodosId<TData = Todo>(id: number, options?: HttpClientOptions & { observe?: 'body' }): Observable<TData>;
 getTodosId<TData = Todo>(id: number, options?: HttpClientOptions & { observe: 'events' }): Observable<HttpEvent<TData>>;
 getTodosId<TData = Todo>(id: number, options?: HttpClientOptions & { observe: 'response' }): Observable<AngularHttpResponse<TData>>;
  getTodosId<TData = Todo>(
    id: number, options?: HttpClientOptions & { observe?: any }): Observable<any> {
    return this.http.get<TData>(
      `https://jsonplaceholder.typicode.com/todos/${id}`,options
    );
  }

 getTodos<TData = Todo[]>( options?: HttpClientOptions & { observe?: 'body' }): Observable<TData>;
 getTodos<TData = Todo[]>( options?: HttpClientOptions & { observe: 'events' }): Observable<HttpEvent<TData>>;
 getTodos<TData = Todo[]>( options?: HttpClientOptions & { observe: 'response' }): Observable<AngularHttpResponse<TData>>;
  getTodos<TData = Todo[]>(
     options?: HttpClientOptions & { observe?: any }): Observable<any> {
    return this.http.get<TData>(
      `https://jsonplaceholder.typicode.com/todos`,options
    );
  }

};

export type GetTodosIdClientResult = NonNullable<Todo>;
export type GetTodosClientResult = NonNullable<Todo[]>;
